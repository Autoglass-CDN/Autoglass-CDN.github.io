/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/smart-select.dev.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/smart-select.dev.js":
/*!************************************!*\
  !*** ./src/js/smart-select.dev.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Cenários 2, 3 faltam ser realizados.\n\n(function () {\n  const Service = ServiceAPI();\n  const View = ViewAPI();\n  const Controller = ControllerAPI();\n\n  const CONFIG = {\n    ASYNC: {\n      MAP_PARAMS: [\n        'PS=20&map=c,c,c', // DEFAULT\n        ',specificationFilter_36', // MONTADORA\n        ',specificationFilter_50', // VEICULO\n        ',specificationFilter_48' // ANO\n      ],\n      TREE_LEVEL: 2,\n      LID_FILTER: 'lid=bf120500-baab-4185-8b70-cc630f7d1c70',\n    },\n    CSS: {\n      HIGHLIGHT: 'highlight',\n      EMPTY: 'empty',\n      ARROW_DOWN: 'fa-caret-down',\n      CLOSE: 'fa-close',\n      SELECTED: 'selected',\n    },\n    CANT_OPEN: false,\n  }\n\n  const SELECTS = [\n    {\n      title: 'Produto',\n      class: 'produtos',\n      values: [],\n      routeSelected: '',\n      isAsyncSearch: false,\n      asyncSearchTerm: '',\n      canBeClear: false,\n    },\n    {\n      title: 'Peça',\n      class: 'peca',\n      values: [],\n      routeSelected: '',\n      isAsyncSearch: true,\n      asyncSearchTerm: '',\n      canBeClear: true,\n    },\n    {\n      title: 'Montadora',\n      class: 'montadora',\n      values: [],\n      routeSelected: '',\n      isAsyncSearch: true,\n      asyncSearchTerm: '.Compatibilidade.Montadora',\n      canBeClear: true,\n    },\n    {\n      title: 'Veículo',\n      class: 'veiculo',\n      values: [],\n      routeSelected: '',\n      isAsyncSearch: true,\n      asyncSearchTerm: '.Veículo',\n      canBeClear: true,\n    },\n    {\n      title: 'Ano',\n      class: 'ano',\n      values: [],\n      routeSelected: '',\n      isAsyncSearch: true,\n      asyncSearchTerm: '.Ano',\n      canBeClear: true,\n    },\n  ];\n\n  _init();\n\n  async function _init() {\n    let categoryTree = await Service.getCategoryTree();\n\n    categoryTree\n      .filter(x => x.hasChildren)\n      .forEach(x => {\n        SELECTS[0].values.push(...x.children);\n      });\n\n    await Controller.checkRouterParams();\n\n    View.buildList(SELECTS[0].values, SELECTS[0].class);\n\n    SELECTS.forEach(View._initSelect_);\n\n    // Create Button Function\n    $('#smart-select-btn').click(Service.search);\n\n  }\n\n  function ViewAPI() {\n    return {\n      _initSelect_,\n      buildList,\n      selectOptionIfButtonHasValue,\n      filterResults,\n      resetResults,\n      virtualizedDOM,\n      createNavigation\n    }\n\n    function _initSelect_(select) {\n      $(`.smart-select__main > .${select.class}`).click((e) => {\n        $(`.smart-select__main > .${select.class} .smart-select__main-results input`)\n          .val('');\n\n        if (select.values) {\n          View.buildList(select.values, select.class);\n          View.selectOptionIfButtonHasValue(select.class);\n\n          if (select.values.length !== 0) {\n            $(`.smart-select__main > .${select.class} .smart-select__main-results`)\n              .slideToggle('fast')\n              .click(e => e.stopPropagation());\n\n            $(`.smart-select__main > .${select.class} .smart-select__main-results input`)\n              .focus();\n          }\n        }\n      });\n\n      $(`.smart-select__main > .${select.class} > div:first-child`)\n        .focus(() => {\n          $(`.smart-select__main > .${select.class} > div:first-child`)\n            .on('keyup', event => {\n              if (event.key === 'Delete' || event.key === 'Backspace') {\n                const index = SELECTS.findIndex(x => x.class === select.class);\n                View.resetResults(index);\n                $(`.smart-select__main > .${select.class}`).click();\n              }\n\n              if (event.key === 'Enter')\n                $(`.smart-select__main > .${select.class}`).click();\n            })\n        })\n        .blur(() => {\n          $(`.smart-select__main > .${select.class} > div:first-child`).unbind('keyup');\n        });\n\n      $(`.smart-select__main > .${select.class} .smart-select__main-results input`)\n        .on('keydown', e => {\n          if (e.key === 'Tab' || e.key === 'Enter') {\n            e.preventDefault();\n            $(`.smart-select__main > .${select.class} ul li.${CONFIG.CSS.HIGHLIGHT}`).click();\n          }\n\n          if (e.key === 'ArrowDown') {\n            let index = 0;\n\n            $(`.smart-select__main > .${select.class} ul li`)\n              .each((i, element) => {\n                if (element.classList.contains(CONFIG.CSS.HIGHLIGHT)) {\n                  index += i + 2;\n                  $(element).removeClass(CONFIG.CSS.HIGHLIGHT);\n                }\n              });\n\n            if (index <= $(`.smart-select__main > .${select.class} ul li`).length) {\n              $(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)\n                .addClass(CONFIG.CSS.HIGHLIGHT);\n\n              $(`.smart-select__main > .${select.class} .smart-select__main-results ul`)\n                .animate({\n                  scrollTop: $(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)[0].offsetTop\n                    - $(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)[0].scrollHeight\n                    - $(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)[0].scrollHeight / 2\n                }, 100);\n            }\n            else {\n              $(`.smart-select__main > .${select.class} ul li:nth-child(1)`)\n                .addClass(CONFIG.CSS.HIGHLIGHT);\n\n              $(`.smart-select__main > .${select.class} .smart-select__main-results ul`)\n                .animate({\n                  scrollTop: $(`.smart-select__main > .${select.class} ul li:nth-child(1)`)[0].offsetTop\n                    - ($(`.smart-select__main > .${select.class} ul li:nth-child(1)`)[0].scrollHeight\n                      + $(`.smart-select__main > .${select.class} ul li:nth-child(1)`)[0].scrollHeight / 2)\n                }, 100);\n            }\n          }\n\n          if (e.key === 'ArrowUp') {\n            let index = 0;\n\n            $(`.smart-select__main > .${select.class} ul li`)\n              .each((i, element) => {\n                if (element.classList.contains(CONFIG.CSS.HIGHLIGHT)) {\n                  index = i;\n                  $(element).removeClass(CONFIG.CSS.HIGHLIGHT);\n                }\n              });\n\n            if (index !== 0) {\n              $(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)\n                .addClass(CONFIG.CSS.HIGHLIGHT);\n\n              $(`.smart-select__main > .${select.class} .smart-select__main-results ul`)\n                .animate({\n                  scrollTop: $(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)[0].offsetTop\n                    - ($(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)[0].scrollHeight\n                      + $(`.smart-select__main > .${select.class} ul li:nth-child(${index})`)[0].scrollHeight / 2)\n                }, 100);\n            }\n            else {\n              $(`.smart-select__main > .${select.class} ul li:nth-child(${$(`.smart-select__main > .${select.class} ul li`).length})`)\n                .addClass(CONFIG.CSS.HIGHLIGHT);\n\n              $(`.smart-select__main > .${select.class} .smart-select__main-results ul`)\n                .animate({\n                  scrollTop: $(`.smart-select__main > .${select.class} ul li:nth-child(${$(`.smart-select__main > .${select.class} ul li`).length})`)[0].offsetTop\n                    - ($(`.smart-select__main > .${select.class} ul li:nth-child(${$(`.smart-select__main > .${select.class} ul li`).length})`)[0].scrollHeight\n                      + $(`.smart-select__main > .${select.class} ul li:nth-child(${$(`.smart-select__main > .${select.class} ul li`).length})`)[0].scrollHeight / 2)\n                }, 100);\n            }\n          }\n        })\n        .on('keyup', e => {\n          if (!['Tab', 'ArrowDown', 'ArrowUp', 'Enter'].find(x => x === e.key))\n            View.filterResults(e, select);\n        });\n\n      // Fecha todos os selects caso já tenha algum aberto.\n      $(document).on(\"click\", (e) => {\n        var container = $(`.smart-select__main > .${select.class}`);\n\n        if (!$(e.target).closest(container).length) {\n          $(`.smart-select__main > .${select.class} .smart-select__main-results`)\n            .slideUp('fast');\n        }\n      });\n    }\n\n    function buildList(objects, _class) {\n      let html = '';\n\n      if (objects) {\n        objects.forEach(x => html += `<li role=\"treeitem\" id=\"${x.id}\">${x.name}</li>`);\n\n        $(`.smart-select__main > .${_class} ul`).html(html);\n\n        $(`.smart-select__main > .${_class} ul li`)\n          .hover(event => {\n            $(`.smart-select__main > .${_class} ul li`)\n              .removeClass(CONFIG.CSS.HIGHLIGHT);\n\n            $(event.target).addClass(CONFIG.CSS.HIGHLIGHT);\n          })\n          .click(event => Controller.addClick(event, _class));\n\n        $(`.smart-select__main > .${_class} ul li`).first().addClass(CONFIG.CSS.HIGHLIGHT);\n      } else {\n        $(`.smart-select__main > .${_class} ul`)\n          .html(`<li style=\"background: white; color:#707070; cursor: default\">Nenhum resultado encontrado.</li>`);\n      }\n    }\n\n    function selectOptionIfButtonHasValue(type) {\n      $(`.smart-select__main > .${type} ul li`)\n        .each((_, element) => {\n          if (element.innerHTML === $(`.smart-select__main > .${type} div > span`).html())\n            $(element).addClass(CONFIG.CSS.SELECTED)\n        });\n    };\n\n    function filterResults(event, select) {\n      if (event.target.value) {\n        const filtered = select.values.filter(y =>\n          replaceDiacritics(y.name.toUpperCase())\n            .includes(\n              replaceDiacritics(event.target.value.toUpperCase())\n            )\n        );\n\n        buildList(filtered, select.class)\n      }\n      else {\n        buildList(select.values, select.class);\n      }\n    };\n\n    function resetResults(_index) {\n      for (let i = _index; i <= (SELECTS.length - 1); i++) {\n        const select = SELECTS[i];\n        const nextSelect = SELECTS[i + 1];\n\n        $(`.smart-select__main > .${select.class} > div > span`).html(select.title);\n        select.routeSelected = '';\n\n        if (nextSelect && nextSelect.canBeClear) {\n          $(`.smart-select__main > .${nextSelect.class}`).addClass(CONFIG.CSS.EMPTY);\n\n          nextSelect.values = [];\n          nextSelect.routeSelected = '';\n        }\n\n        $(`.smart-select__main > .${select.class} > div > .${CONFIG.CSS.ARROW_DOWN}`).show();\n        $(`.smart-select__main > .${select.class} > div > .${CONFIG.CSS.CLOSE}`).hide();\n      }\n    }\n\n    function createNavigation(_class, new_title) {\n      const index = SELECTS.findIndex(x => x.class === _class);\n      const select = SELECTS[index];\n      const nextSelect = SELECTS[index + 1];\n\n      $(`.smart-select__main > .${select.class} > div > span`).html(new_title);\n      $(`.smart-select__main > .${select.class} > div > .${CONFIG.CSS.ARROW_DOWN}`).hide();\n      $(`.smart-select__main > .${select.class} > div > .${CONFIG.CSS.CLOSE}`)\n        .show()\n        .on('click', () => resetResults(index));\n\n      if (nextSelect) {\n        $(`.smart-select__main > .${nextSelect.class}`)\n          .removeClass(CONFIG.CSS.EMPTY);\n\n        if (!CONFIG.CANT_OPEN) {\n          $(`.smart-select__main > .${nextSelect.class}`)\n            .click();\n        }\n      } else {\n        if (!CONFIG.CANT_OPEN) {\n          $(`.smart-select__main > .${select.class}`).click().focus();\n        }\n      }\n    }\n\n    function virtualizedDOM(elements, tagReturn) {\n      const DOM = document.createElement('div');\n\n      DOM.innerHTML = elements;\n\n      return [...DOM.querySelectorAll(`${tagReturn} > li > a`)]\n        .map(x => ({\n          id: x.href,\n          name: x.innerHTML.replace(/\\s\\(\\d+\\)/, ''),\n          pathname: x.pathname,\n          search: x.search\n        }));\n    }\n\n    function replaceDiacritics(str) {\n      const diacritics = [\n        { char: 'A', base: /[\\300-\\306]/g },\n        { char: 'a', base: /[\\340-\\346]/g },\n        { char: 'E', base: /[\\310-\\313]/g },\n        { char: 'e', base: /[\\350-\\353]/g },\n        { char: 'I', base: /[\\314-\\317]/g },\n        { char: 'i', base: /[\\354-\\357]/g },\n        { char: 'O', base: /[\\322-\\330]/g },\n        { char: 'o', base: /[\\362-\\370]/g },\n        { char: 'U', base: /[\\331-\\334]/g },\n        { char: 'u', base: /[\\371-\\374]/g },\n        { char: 'N', base: /[\\321]/g },\n        { char: 'n', base: /[\\361]/g },\n        { char: 'C', base: /[\\307]/g },\n        { char: 'c', base: /[\\347]/g }\n      ]\n\n      diacritics.forEach(function (letter) {\n        str = str.replace(letter.base, letter.char);\n      });\n\n      return str;\n    };\n  }\n\n  function ControllerAPI() {\n    return {\n      addClick,\n      checkRouterParams\n    };\n\n    async function addClick(event, _class) {\n      const index = SELECTS.findIndex(x => x.class === _class);\n      const select = SELECTS[index];\n      const nextSelect = SELECTS[index + 1];\n      // Não pode ser === Pq um pode ser INT e outro STRING, mas o valores são iguais;\n      const optionSelected = select.values.find(x => x.id == event.target.id);\n\n      View.resetResults(index);\n\n      if (index !== 0) {\n        select.routeSelected = optionSelected.url\n          ? optionSelected.url.replace(location.origin, '')\n          : optionSelected.name;\n      }\n\n      if (nextSelect) {\n        if (optionSelected && select.isAsyncSearch) {\n          const response = await Service.getFilters(index, select, optionSelected);\n\n          let values = View.virtualizedDOM(response, nextSelect.asyncSearchTerm);\n\n          // Caso seja Ano (Ultimo campo) tem que ser decrescente\n          (index + 1) === (SELECTS.length - 1)\n            ? values.sort((a, b) => b.name.localeCompare(a.name))\n            : values.sort((a, b) => a.name.localeCompare(b.name))\n\n          nextSelect.values = values;\n        } else {\n          nextSelect.values = optionSelected.children\n            .sort((a, b) => a.name.localeCompare(b.name));\n        }\n\n        View.buildList(nextSelect.values, nextSelect.class);\n      }\n\n      View.createNavigation(select.class, event.target.innerHTML);\n    }\n\n    async function checkRouterParams() {\n      let { pathname, search } = location;\n\n      if (search) {\n        CONFIG.CANT_OPEN = true;\n        const arrayPaths = decodeURI(pathname).split('/').filter(x => x);\n\n        const { input, ...rest } = arrayPaths\n          .slice(0, 3)\n          .join('/')\n          .match(/(\\w+\\/\\w+)/);\n\n        const params = [\n          rest[0],\n          input,\n          ...arrayPaths.slice(3, arrayPaths.length)\n        ];\n\n        for (let i in params) {\n          const select = SELECTS[i];\n          const value = select.values.find(x =>\n            x.url\n              ? x.url.includes(params[i])\n              : x.name.includes(params[i])\n          );\n\n          await Controller.addClick(\n            {\n              target: {\n                id: value.id,\n                innerHTML: value.name\n              }\n            },\n            select.class\n          );\n        }\n      }\n\n      CONFIG.CANT_OPEN = false;\n    }\n  }\n\n  function ServiceAPI() {\n    return {\n      buildMapFilters,\n      buildURL,\n      getCategoryTree,\n      getFilters,\n      search\n    };\n\n    async function getCategoryTree() {\n      return await $.get(`${location.origin}/api/catalog_system/pub/category/tree/${CONFIG.ASYNC.TREE_LEVEL}`);\n    }\n\n    async function getFilters(index, select, optionSelected) {\n      const url = Service.buildURL(index, select, optionSelected);\n\n      return await $.get(url);\n    }\n\n    function getPaths() {\n      return SELECTS\n        .filter(x => x.routeSelected)\n        .map(x => x.routeSelected.includes('/')\n          ? x.routeSelected\n          : `/${x.routeSelected}`)\n        .join('');\n    }\n\n    async function search() {\n      const index = SELECTS.filter(x => x.routeSelected).length;\n      const paths = getPaths();\n      let url = location.origin;\n\n      if (paths) {\n        url += paths;\n        url += `?${buildMapFilters(index - 1)}`;\n      }\n\n      location.href = url;\n    }\n\n    function buildMapFilters(step) {\n      let params = '';\n\n      for (let i = 0; i <= step; i++) {\n        params += CONFIG.ASYNC.MAP_PARAMS[i];\n      }\n\n      return params;\n    }\n\n    function buildURL(index, select, optionSelected) {\n      const paths = getPaths();\n      let url = '';\n\n      if (select.asyncSearchTerm) {\n        url += location.origin;\n        url += paths;\n      } else {\n        url += optionSelected.url;\n      }\n\n      url += `?${CONFIG.ASYNC.LID_FILTER}&${buildMapFilters(--index)}`;\n\n      return url;\n    }\n  }\n})();\n\n//# sourceURL=webpack:///./src/js/smart-select.dev.js?");

/***/ })

/******/ });