!function (e) { var t = {}; function o(a) { if (t[a]) return t[a].exports; var n = t[a] = { i: a, l: !1, exports: {} }; return e[a].call(n.exports, n, n.exports, o), n.l = !0, n.exports } o.m = e, o.c = t, o.d = function (e, t, a) { o.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: a }) }, o.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, o.t = function (e, t) { if (1 & t && (e = o(e)), 8 & t) return e; if (4 & t && "object" == typeof e && e && e.__esModule) return e; var a = Object.create(null); if (o.r(a), Object.defineProperty(a, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var n in e) o.d(a, n, function (t) { return e[t] }.bind(null, n)); return a }, o.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return o.d(t, "a", t), t }, o.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, o.p = "", o(o.s = 2) }({ 2: function (e, t) { var o = { SE: { code: "8529", nome: "Sergipe" }, TO: { code: "9654", nome: "Tocantins" }, BA: { code: "981", nome: "Bahia" }, ES: { code: "1974", nome: "Espírito Santo" }, DF: { code: "1730", nome: "Distrito Federal" }, RS: { code: "7778", nome: "Rio Grande do Sul" }, RJ: { code: "6808", nome: "Rio de Janeiro" }, MT: { code: "4282", nome: "Mato Grosso" }, PR: { code: "5916", nome: "Paraná" }, MS: { code: "4079", nome: "Mato Grosso do Sul" }, GO: { code: "2015", nome: "Goiás" }, AL: { code: "107", nome: "Alagoas" }, CE: { code: "1320", nome: "Ceará" }, PA: { code: "4499", nome: "Pará" }, RN: { code: "7040", nome: "Rio Grande do Norte" }, SC: { code: "8269", nome: "Santa Catarina" }, MA: { code: "2533", nome: "Maranhão" }, PI: { code: "5647", nome: "Piauí" }, MG: { code: "3631", nome: "Minas Gerais" }, PB: { code: "4823", nome: "Paraíba" }, AM: { code: "240", nome: "Amazonas" }, PE: { code: "5229", nome: "Pernambuco" }, SP: { code: "9423", nome: "São Paulo" } }; $((function () { const e = window.location.href.includes("dev") ? "https://api-hml.autoglass.com.br/integracao-b2c/api/web-app/agendamentos" : "https://api.autoglass.com.br/integracao-b2c/api/web-app/agendamentos"; let t = o[$.cookie("mzLocationUF")], a = t.code || null; window.location.href.includes("checkout") && $(window).on("orderFormUpdated.vtex", (e, n) => { n.shippingData.address && n.shippingData.address.state && (t = o[n.shippingData.address.state], a = t.code || null, $(".store").remove(), i()) }); let n = new Date; function i() { $.ajax({ method: "GET", url: `${e}/horarios-lojas?Data=${$(".secao-agendamento .data input").datepicker("getDate").toISOString().split("T")[0]}&CodigoServico=17&CodigoCidade=${a}` }).done((function (e) { $(".secao-agendamento .qtd").text("Lojas encontradas: " + e.Total), 0 === e.Total && $(".secao-agendamento > .store-list").append(s()), e.Registros.forEach((function (t, o) { $(".secao-agendamento > .store-list").append(function (e) { return `<div class="store">\n\t\t<div class="store-info">\n\t\t  <div class="aside">\n\t\t\t<h5 class="store-name">\n\t\t\t  ${e.Nome} | ${e.Bairro}\n\t\t\t</h5>\n\t\t\t<p class="address">\n\t\t\t  ${e.Logradouro.toLowerCase()}, ${e.Bairro.toLowerCase()}, ${e.Cidade.toLowerCase()}, \n\t\t\t  ${e.NumeroResidencial}, ${e.UF}, ${e.Cep}\n\t\t\t</p>\n\t\t  </div>\n\t\t  <button class="btn-ver-horarios ${e.Horarios.filter(e => "Nao" !== e.Disponibilidade.Value).length > 0 ? "" : "danger"}">${e.Horarios.filter(e => "Nao" !== e.Disponibilidade.Value).length > 0 ? "Ver horários" : "Horários indisponíveis"}</button>\n\t\t</div>\n\t\t<div class="time hidden">\n\t\t  <p>Horários:</p>\n\t\t  <div class="time-list">\n\t\t\t${function (e, t, o) { return e.map((function (e) { let a = new Date(e.HoraInicial); return "Nao" !== e.Disponibilidade.Value ? `<button data-store="${t}" data-cep="${o}" class="timestamp">${a.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" })}</button>` : "" })) }(e.Horarios, `${e.Nome} | ${e.Bairro}`, e.Cep).join("\n")}\n\t\t  </div>\n\t\t</div>\n\t  </div>` }(t)), e.Registros.length - 1 === o && $(".store-info .btn-ver-horarios:not(.danger)").click((function () { $(this).parent().next().toggleClass("hidden") })) })), $(".timestamp").click((function () { window.location.href.includes("checkout") && $("body").removeClass("mz-bo-on mz-as-on mz-il-on"), $(".mz-install__button--buy").click(e => e.preventDefault()); const e = $(this).attr("data-store"), t = $(this).attr("data-cep"), o = $(this).html(), a = $(".secao-agendamento .data input").datepicker("getDate").toISOString().split("T")[0]; localStorage.setItem("AG_SelectedHour", JSON.stringify({ loja: e, horario: o, date: a, _createAt: Date.now() })), vtexjs.checkout.calculateShipping({ postalCode: t, country: "BRA", addressType: "search" }).then(e => { !function (e) { const t = [e.shippingData.availableAddresses[e.shippingData.availableAddresses.length - 1]], o = e.shippingData.logisticsInfo[0]; if (o) { const a = o.slas.filter(e => "pickup-in-point" === e.deliveryChannel), n = e.shippingData.logisticsInfo.map(e => ({ addressId: t[0].addressId, itemIndex: e.itemIndex, selectedDeleveryChannel: "pickup-in-point", selectedSla: a[0].id })); fetch(`/api/checkout/pub/orderForm/${e.orderFormId}/attachments/shippingData`, { method: "post", body: JSON.stringify({ clearAddressIfPostalCodeNotFound: !1, expectedOrderFormSections: ["shippingData"], selectedAddresses: t, logisticsInfo: n }) }).then(e => e.json()).then(e => { vtexjs.checkout.sendAttachment("shippingData", { selectedAddresses: t, logisticsInfo: n }) }) } }(e), $(".mz-install__button--buy").unbind("click") }) })) })).fail(() => $(".secao-agendamento > .store-list").append(s())), $(".store-info .btn-ver-horarios:not(.danger)").click((function () { $(this).parent().next().toggleClass("hidden") })) } function s() { return '<div id="sem-lojas" style="\n      min-height: 100px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-evenly;">\n      <p style="text-align: center;">\n        Não encontramos horários de instalação disponíveis para essa data.\n      </p>\n      <small style="text-align: center;">\n        Por favor, tente outras datas ou fale com nossos consultores no chat.\n      </small>\n    </div>' } n.setDate(n.getDate() + 2), $(".secao-agendamento > .store-list > .filter > .data input").datepicker({ dateFormat: "dd/mm/yy", dayNames: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado", "Domingo"], dayNamesMin: ["D", "S", "T", "Q", "Q", "S", "S", "D"], dayNamesShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb", "Dom"], monthNames: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], monthNamesShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], minDate: n, beforeShowDay: e => [!e.toDateString().includes("Sun")], onSelect: () => { $(".secao-agendamento > .store-list .store").remove(), $(".secao-agendamento > .store-list #sem-lojas").remove(), i() } }), $(".secao-agendamento > .store-list > .filter > .data input").datepicker("setDate", n), $("#btn-alterar-local-instalacao").click((function () { $(".mz-install__close--button").click(), $("#btn-alterar-open-modal").click() })), i() })), $((function () { const e = window.location.href.includes("dev") ? "https://api-hml.autoglass.com.br/integracao-b2c/api/web-app/" : "https://api.autoglass.com.br/integracao-b2c/api/web-app/"; let t, o = new Event("datepicker_carregado"), a = !1, n = new Date; n.setDate(n.getDate() + 2); let i = new Date; i = new Date(i.getFullYear(), n.getMonth() + 2, 0), $(".mz-advantages__content .cep  input").mask("99999-999").val(""), $("#mostrar-datas-datepicker").datepicker({ dateFormat: "dd/mm/yy", showAnim: "slideDown", numberOfMonths: $(document).width() < 650 ? 1 : 2, dayNamesMin: ["D", "S", "T", "Q", "Q", "S", "S"], monthNames: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], minDate: n, maxDate: i, onSelect: (e, t) => { localStorage.setItem("AG_SelectedDaySM", JSON.stringify({ selectedDay: e, infos: t, _createAt: Date.now() })), $(".preview-data").fadeOut(500, () => { $(".preview-data b").html(e), $(".preview-data").fadeIn(500) }), $.get("/").then() }, beforeShowDay: function (e) { const o = e.toDateString().includes("Sun"), a = e.toDateString().includes("Sat"); if (o || a) return [!1]; if (t) { const o = t.find(t => t.DataRoteiro.toLocaleDateString() === e.toLocaleDateString()); if (o) return o.Disponivel ? [!0] : [!1] } return [!1] } }), $("#input-cep-btn").click(r); const s = JSON.parse(localStorage.getItem("AG_AddressSelected")); async function r(o) { if ($("#aviso-servico-movel").hide(), $(".preview-data").hide(), o && !a) { a = !0, $(".datas-disponiveis").show(), $(".loading-dates").show(), $("#mostrar-datas-datepicker").css("height", "0px"); const s = { Cep: o, DataInicio: n.toISOString().split("T")[0], DataFim: i.toISOString().split("T")[0], Carrinho: [], TipoDocumento: "Venda", TipoServico: "Instalacao", Qt: 100 }; if (window.skuJson) s.Carrinho.push({ CodigoProduto: +window.skuJson.name.match(/\d+$/)[0], Quantidade: 1 }); else { let e; e = window.location.href.includes("orderPlaced") ? await new Promise((e, t) => { $.ajax({ jsonp: !1, url: "/api/checkout/pub/orders/" + $("#order-id").text().trim(), contentType: "application/json", type: "GET", success: function (t) { e(t) }, error: function (e) { t(e) } }) }) : await vtexjs.checkout.getOrderForm(), s.Carrinho = e.items.filter(e => "2000108" !== e.additionalInfo.brandId).map(e => ({ CodigoProduto: +e.productRefId, Quantidade: 1 })) } try { const o = await function (t) { return new Promise((o, a) => { $.ajax({ contentType: "application/json", crossDomain: !0, jsonp: !1, type: "POST", url: e + "agendamentos/servicos-moveis/disponibilidades", data: JSON.stringify(t), success: function (e) { o(e) }, error: function (e) { a(e) } }) }) }(s); t = o.Registros.map(e => ({ ...e, DataRoteiro: new Date(e.DataRoteiro) })), $("#mostrar-datas-datepicker").datepicker("setDate", n), $("#mostrar-datas-datepicker").datepicker("refresh"), $("a.ui-state-active").removeClass("ui-state-active"), $("a.ui-state-hover").removeClass("ui-state-hover"), $("#mostrar-datas-datepicker").css("height", "260px") } catch (e) { let t; switch (e.status) { case 400: t = JSON.parse(e.responseText).Message; break; default: t = "Não encontramos atendimento para este CEP. Mas procure a gente no chat para te ajudar!" }$("#aviso-servico-movel").show().html(t) } finally { a = !1, $(".loading-dates").hide() } } } s ? r(s.postalCode) : $(window).on("cep-finish-load", e => { r(e.originalEvent.detail.shippingData.address.postalCode) }), $(window).on("cep-updated", e => { r(e.originalEvent.detail.shippingData.address.postalCode) }), window.dispatchEvent(o) })) } });
